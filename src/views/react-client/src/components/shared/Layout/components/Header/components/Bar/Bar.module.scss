@use '@styles/_responsives' as responsives;
@use '@styles/_mixins' as mixins;

.container {
  @include mixins.flex_container(row, center, center);
  position: relative;
}

.input {
  width: 100%;
  height: 30px;
  padding: 0px 0.125rem 0px 0.5rem;
  font-size: 16px;
  box-shadow: 0 0 3px var(--color-epsilon) inset;
  border-radius: var(--web-border-radius);
  text-align: center;

  &::placeholder {
    //Firefox & chrome
    transition: color 50ms ease-in-out;
  }

  &::-ms-input-placeholder {
    //Edge
    transition: color 50ms ease-in-out;
  }

  &:focus {
    &::placeholder {
      //Firefox & chrome
      color: var(--color-zeta);
    }

    &::-ms-input-placeholder {
      //Edge
      color: var(--color-zeta);
    }
  }
}

.input:not(:placeholder-shown) ~ .iconContainer {
  width: 100%;
}

.input:focus ~ .iconContainer .icon {
  opacity: 0.25;
}

.iconContainer {
  @include mixins.flex_container(row, flex-start, center);
  position: absolute;
  left: 50%;
  translate: -50% 0%;
  width: 100px;
  padding-left: 8px;
  transition: width 200ms ease-in-out;
  pointer-events: none;

  .icon {
    transition: opacity 50ms ease-in-out;
    height: 18px;
    opacity: 0.5;
  }
}

@include responsives.XGA {
  .input {
    height: 35px;

    &__mimetize {
      background-color: var(--color-xi);
      backdrop-filter: blur(5px);
      box-shadow: none;
      transition: all 100ms ease-in-out;
      color: var(--color-theta);

      &:focus {
        color: black;
        background-color: white;
        backdrop-filter: none;
        box-shadow: 0 0 3px var(--color-epsilon) inset;
      }
    }
  }
}
